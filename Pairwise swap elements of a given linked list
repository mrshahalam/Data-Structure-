package test;

class demo
{
	Node head;
	
	 class Node
	{
		int data;
		Node next;
		Node(int d)
		{
			data=d;
			next=null;
		}
		
	}
	 public void push(int a)
	 {
		 Node first = new Node(a);
		 
		 first.next=head;
		 head=first;
	 }
	 void pairWiseSwap() 
	    { 
	        Node temp = head; 
	  
	        /* Traverse only till there are atleast 2 nodes left */
	        while (temp != null && temp.next != null) { 
	  
	            /* Swap the data */
	            int k = temp.data; 
	            temp.data = temp.next.data; 
	            temp.next.data = k; 
	            temp = temp.next.next; 
	        } 
	    } 
	        
	 public void print()
	 {
		 Node p = head;
		 while(p!=null)
		 {
			 System.out.print(p.data+" ");
			 p=p.next;
		 }
	 }
	public static void main(String args[])
	{
		demo list = new demo();
		list.push(23);
		list.push(25);
		list.push(12);
		list.push(49);
		list.push(22);
		list.push(16);
		list.push(15);
		list.push(81);
		list.push(70);
		list.push(160);
		list.push(13);
		list.push(9);
		System.out.println("Linked List :");
		list.print();
		System.out.println("\nLinked List After the Operation :");
		list.pairWiseSwap();
		list.print();
	}
	
}
