 package test;

class demo
{
	Node head;
	
	 class Node
	{
		int data;
		Node next;
		Node(int d)
		{
			data=d;
			next=null;
		}
		
	}
	 public void push(int a)
	 {
		 Node first = new Node(a);
		 
		 first.next=head;
		 head=first;
	 }
	 void remove_duplicates() { 
	        Node ptr1 = head, ptr2 = null; 
	       
	  
	        /* Pick elements one by one */
	        while (ptr1 != null && ptr1.next != null) { 
	            ptr2 = ptr1; 
	  
	            /* Compare the picked element with rest 
	                of the elements */
	            while (ptr2.next != null) { 
	  
	                /* If duplicate then delete it */
	                if (ptr1.data == ptr2.next.data) { 
	  
	                    /* sequence of steps is important here */
	                    //dup = ptr2.next; 
	                    ptr2.next = ptr2.next.next; 
	                    System.gc(); 
	                } else /* This is tricky */ { 
	                    ptr2 = ptr2.next; 
	                } 
	            } 
	            ptr1 = ptr1.next; 
	        } 
	 }
	        
	 public void print()
	 {
		 Node p = head;
		 while(p!=null)
		 {
			 System.out.print(p.data+" ");
			 p=p.next;
		 }
	 }
	public static void main(String args[])
	{
		demo list = new demo();
		list.push(23);
		list.push(21);
		list.push(19);
		list.push(19);
		list.push(12);
		list.push(12);
		list.push(11);
		list.push(11);
		list.push(10);
		list.push(10);
		list.push(9);
		list.push(9);
		System.out.println("Linked List :");
		list.print();
		System.out.println("\nLinked List Dublication :");
		list.remove_duplicates();
		list.print();	
	}
}
