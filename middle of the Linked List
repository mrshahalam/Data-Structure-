package test;
// Iterative Java program to search an element 
// in linked list 

//Node class 
class Node 
{ 
	int data; 
	Node next; 
	Node(int d) 
	{ 
		data = d; 
		next = null; 
	} 
} 

//Linked list class 
class demo 
{ 
	Node head; //Head of list 

	//Inserts a new node at the front of the list 
	public void push(int new_data) 
	{ 
		//Allocate new node and putting data 
		Node new_node = new Node(new_data); 

		//Make next of new node as head 
		new_node.next = head; 

		//Move the head to point to new Node 
		head = new_node; 
	} 
	void printMiddle() 
    { 
        Node slow_ptr = head; 
        Node fast_ptr = head; 
        if (head != null) 
        { 
            while (fast_ptr != null && fast_ptr.next != null) 
            { 
                fast_ptr = fast_ptr.next.next; 
                slow_ptr = slow_ptr.next; 
            } 
            System.out.println("The middle element is [" + 
                                slow_ptr.data + "] \n"); 
        } 
    } 

	//Checks whether the value x is present in linked list 
	

	//Driver function to test the above functions 
	public static void main(String args[]) 
	{ 

		//Start with the empty list 
		demo llist = new demo(); 

		/*Use push() to construct below list 
		14->21->11->30->10 */
		llist.push(10); 
		llist.push(30); 
		llist.push(11); 
		llist.push(21); 
		llist.push(14); 
		llist.push(45);
		llist.push(567);
		
		llist.printMiddle();
		
	    

	} 
} 

